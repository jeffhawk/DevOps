name: CI/CD - DevOps Fase 1 - React/Terraform/S3

on:
    push:
        branches: ["master"]
    workflow_dispatch:

jobs:
    #1 - Seguindo as orientações das aulas, estou seguindo as melhores práticas de CI/CD, irei realizar os testes e o build no ambiente do github antes.
    build-static:
        name: Validacao dos arquivos
        runs-on: ubuntu-latest
        steps:
            - name: Checkout do código
              uses: actions/checkout@v4

            - name: Cache do npm
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-npm-cache-

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test -- --watchAll=false

            - name: Audit packages
              run: npm audit --production --audit-level=moderate || true

            - name: Build
              run: npm run build

            - name: Verificar a pasta build
              run: ls -la build

            - name: Verificar se existe index.html
              run: |
                if [ ! -f build/index.html ]; then
                    echo "index.html não encontrado!"
                    exit 1
                else
                    echo "index.html encontrado"
                fi

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                name: build
                path: build/

    #2 - Agora que o build foi validado, irei gerar a infra, começando com a validação do terraform
    terraform-validate:
        name: Validação e planejamento do Terraform
        needs: build-static
        runs-on: ubuntu-latest
        steps:
            - name: Checkout do código
              uses: actions/checkout@v4

            - name: Configurar as credenciais de acesso AWS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
                aws-region: us-east-1

            - name: Instalar Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: 1.9.5

            - name: Iniciar Terraform
              working-directory: infra/terraform
              run: terraform init -input=false

            - name: Verificar formatação
              working-directory: infra/terraform
              run: terraform fmt -check

            - name: Validar configuração
              working-directory: infra/terraform
              run: terraform validate

            - name: Planejar infraestrutura
              working-directory: infra/terraform
              run: terraform plan -out=plan.tfplan

            - name: Salvar plano como artefato
              uses: actions/upload-artifact@v4
              with:
                name: tfplan
                path: infra/terraform/plan.tfplan

    #3 - Irá aplicar a estrutura somente se houve um push para o branch principal que no meu caso e o master!
    terraform-creation:
        name: Criar infraestrutura na AWS
        needs: terraform-validate
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        runs-on: ubuntu-latest
        outputs:
            bucket_name: ${{ steps.tf_outputs.outputs.bucket_name }}
            website_endpoint: ${{ steps.tf_outputs.outputs.website_endpoint }}
        steps:
            - name: Checkout do código
              uses: actions/checkout@v4

            - name: Configurar as credenciais de acesso AWS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
                aws-region: us-east-1

            - name: Instalar Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: 1.9.5

            - name: Iniciar Terraform
              working-directory: infra/terraform
              run: terraform init -input=false

            - name: Baixar o plano
              uses: actions/download-artifact@v4
              with:
                name: tfplan
                path: infra/terraform/

            - name: Aplicar plano
              working-directory: infra/terraform
              run: |
                terraform apply -auto-approve plan.tfplan

            # - name: Exportar outputs para JSON
            #   working-directory: infra/terraform
            #   run: terraform output -json 2>/dev/null > tf_outputs.json

            - name: Verificar versão do jq
              run: jq --version

            - name: Capturar saída
              id: tf_outputs
              working-directory: infra/terraform
              run: |

                # Extração dos valores
                bucket=$(terraform output -raw bucket_name)
                endpoint=$(terraform output -raw website_endpoint)
                pwd
                echo $bucket
                echo "bucket_name=$bucket" >> $GITHUB_OUTPUT
                echo "website_endpoint=$endpoint" >> $GITHUB_OUTPUT






    #4 - Fazer o deploy do build para o bucket S3
    deploy:
      name: Deploy para o S3
      needs: terraform-creation
      runs-on: ubuntu-latest
      steps:
        - name: Checkout do código
          uses: actions/checkout@v4

        - name: Baixar o build
          uses: actions/download-artifact@v4
          with:
            name: build
            path: build/

        - name: Configurar as credenciais de acesso AWS
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: us-east-1

        - name: Debug outputs
          run: |
            echo "Bucket: ${{ needs.terraform-creation.outputs.bucket_name }}"
            echo "Endpoint: ${{ needs.terraform-creation.outputs.website_endpoint }}"

        - name: Fazer o upload do build para o S3
          run: |
            aws s3 sync build/ s3://${{ needs.terraform-creation.outputs.bucket_name }}/ --delete --acl public-read --cache-control "max-age=300, public"

        - name: Exibir URL do site
          run: |
            echo 'Site publicado em: http://${{ needs.terraform-creation.outputs.website_endpoint }}'
